{"version":3,"file":"static/js/499.a96d4545.chunk.js","mappings":"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","sources":["constants/iconsSize.js","redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const iconsSize = Object.freeze({\n    small: 16,\n    medium: 32,\n    large: 64,\n})","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.getIsLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contactForm__form\":\"ContactForm_contactForm__form__-c9TG\",\"contactForm__field\":\"ContactForm_contactForm__field__+cOPR\",\"contactForm__field_label\":\"ContactForm_contactForm__field_label__YSzht\",\"contactForm__input\":\"ContactForm_contactForm__input__k3i+4\",\"contactForm__submit_button\":\"ContactForm_contactForm__submit_button__eOEdn\",\"contactForm__submit-button\":\"ContactForm_contactForm__submit-button__daHG0\"};","// import { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\nimport { selectContacts } from \"redux/contacts/contactsSelectors\";\nimport css from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    // в даній функції знаки питання після значень перевіряють чи існує таке значення перед викликом toLowerCase()\n    const newContactAudit = newContact => {\n        return contacts.filter(\n            contact =>\n                contact.name?.toLowerCase() === newContact.name?.toLowerCase()\n        );\n    };\n\n    const contactFormSubmitHandler = newContact => {\n        if (newContactAudit(newContact).length > 0) {\n            alert(`${newContact.name} is already in contacts.`);\n            return false;\n        } else {\n            dispatch(addContact(newContact));\n            return true;\n        }\n    };\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        if (contactFormSubmitHandler({ name, number })) {\n            form.reset();\n        }\n    };\n\n    return (\n        <form className={css.contactForm__form} onSubmit={handleSubmit}>\n            <label\n                htmlFor=\"name\"\n                className={`${css.contactForm__field} ${css.contactForm__field_label}`}\n            >\n                Name:\n                <input\n                    className={css.contactForm__input}\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    placeholder=\"Contact name\"\n                    required\n                />\n            </label>\n            <label\n                htmlFor=\"number\"\n                className={`${css.contactForm__field} ${css.contactForm__field_label}`}\n            >\n                Number:\n                <input\n                    className={css.contactForm__input}\n                    id=\"number\"\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    placeholder=\"Contact number\"\n                    required\n                />\n            </label>\n            <button type=\"submit\" className={css.contactForm__submit_button}>\n                Add contact\n            </button>\n        </form>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__field\":\"Filter_filter__field__fujd7\",\"filter__field_label\":\"Filter_filter__field_label__tro3m\",\"filter__field_input\":\"Filter_filter__field_input__xwagY\"};","import { useDispatch } from \"react-redux\";\n\nimport { filterContacts } from \"redux/contacts/filterSlice\";\nimport css from \"./Filter.module.css\";\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n    const contactFilter = event => {\n        dispatch(filterContacts(event.target.value));\n    };\n\n    return (\n        <>\n            <label\n                htmlFor=\"filter-field\"\n                className={`${css.filter__field} ${css.filter__field_label}`}\n            >\n                Find contacts by name:\n                <input\n                    id=\"filter-field\"\n                    className={css.filter__field_input}\n                    type=\"text\"\n                    placeholder=\"Enter search query\"\n                    onChange={contactFilter}\n                />\n            </label>\n        </>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListItem__item\":\"ContactListItem_contactsListItem__item__E94IE\",\"contactsListItem__item_circle\":\"ContactListItem_contactsListItem__item_circle__Tsc6G\",\"contactsListItem__item_name\":\"ContactListItem_contactsListItem__item_name__otVc+\",\"contactsListItem__item_number\":\"ContactListItem_contactsListItem__item_number__mAbZo\",\"contactsListItem__button\":\"ContactListItem_contactsListItem__button__HFX2D\"};","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\n\nimport { deleteContact } from \"redux/contacts/contactsOperations\";\n\nimport css from \"./ContactListItem.module.css\";\n\nconst ContactsListItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    return (\n        <li className={css.contactsListItem__item}>\n            <span className={css.contactsListItem__item_circle}></span>\n            <p className={css.contactsListItem__item_name}>\n                {name}:\n                <span className={css.contactsListItem__item_number}>\n                    {number}\n                </span>\n            </p>\n            <button\n                type=\"button\"\n                className={css.contactsListItem__button}\n                onClick={() => dispatch(deleteContact(id))}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactsListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList__list\":\"ContactList_contactList__list__EgfLC\"};","import { useSelector } from \"react-redux\";\n\nimport { selectContacts, selectFilter } from \"redux/contacts/contactsSelectors\";\n\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport css from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const visibleContacts = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n        <ul className={css.contactList__list}>\n            {visibleContacts?.map(({ id, name, number }) => (\n                <ContactListItem key={id} id={id} name={name} number={number} />\n            ))}\n        </ul>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    gap: 200px;\n    align-items: start;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    padding: 20px;\n    border-radius: 4px;\n    transform: translate(-50%, -50%) scale(1);\n`;\n\nexport const ConatctFormConatiner = styled.div``;\n\nexport const ContactsListContainer = styled.div``;\n\nexport const NotAuthContainer = styled.div`\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    padding: 20px;\n    border-radius: 4px;\n    transform: translate(-50%, -50%) scale(1);\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\n\nimport { fetchContacts } from \"../../redux/contacts/contactsOperations\";\nimport {\n    selectError,\n    selectIsLoading,\n} from \"../../redux/contacts/contactsSelectors\";\nimport { selectIsAuthorized } from \"../../redux/auth/authSelectors\";\n\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport { Container, ConatctFormConatiner, NotAuthContainer } from \"./Contacts.styled\";\nimport { iconsSize } from \"../../constants/iconsSize\";\n\nexport default function App() {\n    const dispatch = useDispatch();\n    const isAuthorized = useSelector(selectIsAuthorized);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            {isAuthorized ? (\n                <Container>\n                    <ConatctFormConatiner>\n                        <h2>Phonebok</h2>\n                        <ContactForm />\n                    </ConatctFormConatiner>\n                    <div>\n                        <h2>Contacts</h2>\n                        <Filter />\n                        {isLoading && !error && <h3>Request in progress...</h3>}\n                        <ContactList />\n                        {error && <h3>{error}</h3>}\n                    </div>\n                </Container>\n            ) : (\n                <NotAuthContainer>\n                    <h1>Please log in to access the phonebook</h1>\n                    <FcLikePlaceholder size={iconsSize.large} />\n                </NotAuthContainer>\n            )}\n        </>\n    );\n}\n"],"names":["iconsSize","Object","freeze","small","medium","large","selectContacts","state","contacts","items","selectIsLoading","getIsLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","contactFormSubmitHandler","newContact","contact","_contact$name","_newContact$name","name","toLowerCase","newContactAudit","length","alert","concat","addContact","_jsxs","className","css","onSubmit","event","preventDefault","form","currentTarget","elements","value","number","reset","children","htmlFor","_jsx","id","type","pattern","title","placeholder","required","Filter","_Fragment","onChange","filterContacts","target","_ref","onClick","deleteContact","ContactList","visibleContacts","includes","map","_ref2","ContactListItem","Container","styled","_templateObject","_taggedTemplateLiteral","ConatctFormConatiner","_templateObject2","NotAuthContainer","_templateObject3","_templateObject4","App","isAuthorized","selectIsAuthorized","isLoading","useEffect","fetchContacts","FcLikePlaceholder","size"],"sourceRoot":""}